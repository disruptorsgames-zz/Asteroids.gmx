<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
selection = 0;
menu = ds_list_create();
ds_list_add(menu, "Arcade");
ds_list_add(menu, "Asteroid Miner");
ds_list_add(menu, "High Scores");
ds_list_add(menu, "Quit");

// generate starmap surface
starmap();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Controls
if (keyboard_check_pressed(vk_up))
{
    selection--;
    if (selection &lt; 0)
        selection = ds_list_size(menu) - 1;
}
else if (keyboard_check_pressed(vk_down))
{
    selection++;
    if (selection &gt; ds_list_size(menu) - 1)
        selection = 0;
}

if (keyboard_check(vk_enter))
{
    var value = ds_list_find_value(menu, selection);
    switch (value)
    {
        case "Arcade":
            room_goto(r_main);
            break;
        case "Asteroid Miner":
            show_message("Comming soon...");
            break;
        case "High Scores":
            room_goto(r_highscores);
            break;
        case "Quit":
            game_end();
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// HUD
//draw_text_colour(16, 16, o_menu.selection, c_white, c_white, c_white, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw

// starmap
draw_surface(surf, 0, 0);

// menu
for(i = 0; i &lt; ds_list_size(menu); i++)
{
    if (i == selection)
        value = "&gt;" + ds_list_find_value(menu, i);
    else
        value = ds_list_find_value(menu, i);
    
    draw_set_font(f_menu);
    draw_text_colour((view_wview[0] - string_width(value)) / 2, view_hview[0] / 2 - ((ds_list_size(menu) - 1) * font_get_size(f_menu)) + (i * font_get_size(f_menu)), value, c_white, c_white, c_white, c_white, 1);
    draw_set_font(-1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
